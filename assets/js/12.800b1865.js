(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{255:function(e,t,r){"use strict";r.r(t);var s=r(6),v=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"transform3d"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#transform3d"}},[e._v("#")]),e._v(" transform3d")]),e._v(" "),r("p",[e._v("允许我们向元素添加3D转换。想使得我们的3D转换有效果，必须明白几个css属性的使用方式：")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("perspective")])]),e._v(" "),r("li",[r("code",[e._v("transform:perspective(600px) rotateY(45deg)")])]),e._v(" "),r("li",[r("code",[e._v("transform-style:preserve-3d")])])]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"perspective"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#perspective"}},[e._v("#")]),e._v(" perspective")]),e._v(" "),r("ol",[r("li",[e._v("定义\n这个属性定义对象与用户的距离，perspective的存在与否决定了你所看到的元素是2次元还是3次元的，有透视才会有立方体效果."),r("br"),e._v("\n有两种为元素添加perspective的方式：\n"),r("ul",[r("li",[r("code",[e._v("perspective:900px")]),e._v(" ：多个元素统一加透视，例如一个统一的立方体、按钮。只会对它的子元素生效，本身不生效，影响它所有的子元素")]),e._v(" "),r("li",[r("code",[e._v("transform: perspective(900px) rotateY(45deg)")]),e._v(" ：为每一个元素添加透视，只会影响这个元素，perspective一定要在rotate前面，否则无效")])])])]),e._v(" "),r("p",[e._v("两者的区别是：直接在父元素上设置透视，子元素的透视效果会不一样；而在每个元素上设置一样的透视，透视效果一样；")]),e._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[r("p",[e._v("注意点")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("透视是在元素旋转或者倾斜时发生的，所以直接加透视是看不到效果的，必须配合旋转或者倾斜才能看到效果")])]),e._v(" "),r("li",[r("p",[e._v("个人理解，透视类似于我们想在一个屏幕上看一个立方体的多面，但是不能转动我们的屏幕，那么就只能通过一些属性转动这个立方体了去观察我们想要看到的那一面（也可以使用perspective-origin设置人动立方体不动）")])]),e._v(" "),r("li",[r("p",[e._v("perspective设置透视，我想从某个角度看这个立方体，赋予我观察某个角度的能力；transform-style:preserve-3d，我想从三维空间观察这个立方体，赋予我看整个立方体的能力；可以把perspective看成一个flag，我准备从3D的角度来观察这个立方体了")])]),e._v(" "),r("li",[r("p",[e._v("perspective的取值，相当于我们在看一座高山，数值小一点相当于站在山脚下，看到的高山会很大；数值大一点相当于站的很远，看到的高山会很小（近大远小）")])])])]),e._v(" "),r("li",[r("p",[e._v("perspective-origin")])])]),e._v(" "),r("p",[e._v("我们想看一个立方体，要么立方体动人不动；要么人动，立方体不动，perspective-origin就是用来设置人动立方体不动的属性")]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"三维空间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三维空间"}},[e._v("#")]),e._v(" 三维空间")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("定义\n有Z轴参与的空间，就称为三维空间。Z轴是纵深，穿过屏幕的那条轴，Z轴的偏移只能用px设置。")])]),e._v(" "),r("li",[r("p",[e._v("rotateX/Y/Z 与 translateX/Y/Z的区别")])])]),e._v(" "),r("p",[e._v("前者是在三维空间上旋转，后者是在三维空间上移动。例如：rotateZ是围绕Z轴旋转，而translateZ是沿着Z轴平移。")]),e._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[e._v("注意点\n"),r("ul",[r("li",[e._v("translateZ可以帮我们实现类似于两张玻璃片产生距离的立体效果")]),e._v(" "),r("li",[r("font",{attrs:{color:"red"}},[e._v("直接设置transform:translateZ(200px)是看不出来的，如上所述，想要看出立方体效果，需要先加perspective透视的标识，再加transform-style:preserve-3d绘制三维空间；类似于 perspective将电影设置成3D，transform-style:preserve-3d给你一个3D眼镜才能看出来3D，缺一不可以")])],1)])])]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"backface-visibility-hidden"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#backface-visibility-hidden"}},[e._v("#")]),e._v(" backface-visibility:hidden")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("定义\n背面不可见")])]),e._v(" "),r("li",[r("p",[e._v("用途")]),e._v(" "),r("ul",[r("li",[e._v("卡片翻转")])])])]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"示例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[e._v("#")]),e._v(" 示例")]),e._v(" "),r("iframe",{attrs:{width:"90%",height:"550",allowfullscreen:"allowfullscreen",src:"https://codepen.io/superwtt/embed/abZNmbo?height=450&theme-id=default&default-tab=result"}})])}),[],!1,null,null,null);t.default=v.exports}}]);